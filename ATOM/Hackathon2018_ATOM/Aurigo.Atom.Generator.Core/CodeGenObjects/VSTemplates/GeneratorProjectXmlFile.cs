using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Aurigo.Atom.Generator.Core.CodeGenObjects.VSTemplates
{
    public class GeneratorProjectXmlFile
    {
        #region Fixed Properties

        public string AutoGeneratedProjectNamespace { get { return ModuleId + "_TestSuite"; } }

        public string SharedLibraryPath { get; private set; } = "SharedLib";

        public string ProjectName { get { return ModuleId + "_TestSuite"; } }
        public string ProjectFileName { get { return $"{this.ProjectName}.csproj"; } }
        /// <summary>
        /// This will be used as AssemblyGuid
        /// </summary>
        public Guid ProjectGuid { get; private set; } = Guid.NewGuid();

        public string RootNamespace { get { return ModuleId; } }
        public string AssemblyTitle { get { return ModuleId; } }
        public string AssemblyName { get; private set; }

        public string TargetFrameworkVersion { get { return "v4.6.1"; } }
        #endregion Fixed Properties

        public string ModuleId { get; private set; }
        public string ModuleXmlName { get; private set; }
        public List<GeneratorScenarioFileObject> ScenarioFileObjectList { get; private set; } = new List<GeneratorScenarioFileObject>();

        public GeneratorProjectXmlFile(string moduleId, string moduleConfigXmlFileNameWithExtension, string assemblyName)
        {
            this.ModuleId = moduleId;
            this.ModuleXmlName = moduleConfigXmlFileNameWithExtension;

            if (!string.IsNullOrEmpty(assemblyName))
                this.AssemblyName = assemblyName;
            else
                this.AssemblyName = moduleId;
        }

    }
}
