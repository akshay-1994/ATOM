using AurigoTest.Toolkit.Common;
using AurigoTest.Toolkit.Core;
using AurigoTest.Toolkit.MW;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DemoInConsole.Samples
{
    class SampleFormTest1
    {
        const string DEFAULT_USER_NAME = "rimshi";
        const string DEFAULT_USER_PWD = "aurigo";
        
        TC nn = new TC();
        public void Open(string testId, string testSummary)
        {
            TestScenarioConfig config = null;

            //-------------------------------------------------------------------------------
            #region AutoGenerate Configurations

            config = new TestScenarioConfig()
            {
                IsSaveWillSucceed = true, // { isSaveWillSucceed };
                //AutomationGUID_FieldName = this.AutomationGUID_FieldName,// { AutomationGUID_FieldName };
                IsVerificationRequired_InDatabase = true, // { IsDatabaseVerificationRequired };
                VerificationDescriptionText = "Verify Employee Information in DB",// { VerificationDescriptionText };
                IsVerificationRequired_InEditMode = true,
                IsVerificationRequired_InViewMode = true,
            };

            #endregion AutoGenerate Configurations
            //-------------------------------------------------------------------------------

            var listPage = MasterworksScreen
                                .Begin(testId, testSummary, BrowserType.Chrome, false)
                                .Login(DEFAULT_USER_NAME, DEFAULT_USER_PWD)
                                .OpenEnterprise_Form_ByDisplayName("Employee Information");

            var formPage = listPage.OpenCreateRecordForm();


            formPage.SetTextbox("Employee Name:", "Emp1")
                           .SetTextbox("Employee Age:", 22)
                           .SetTextbox("Employee Grade:", 7.5);


            if (config.IsSaveWillSucceed)
                listPage = formPage.SaveForm_Successfully();
            else
                formPage = formPage.SaveForm_ExpectValidationError();

            #region If Save will succeeed
            #region If Database validation is required
            if (config.IsSaveWillSucceed && config.IsVerificationRequired_InDatabase)
            {
                Action<DataRowVerifier<GenericListPage>, GenericListPage> dbVerifierFunction = (v, listPageRef) =>
                {
                    #region AutoGenerated Assert In DB rowVerifier

                    v.Assert_Data("Employee Name:", "Emp1");
                    v.Assert_Data("Employee Age:", "22");
                    v.Assert_Data("Employee Grade:", "7.5");

                    #endregion AutoGenerated Assert In DB rowVerifier
                };

                if (config.IsAutomationGUID_Field_Defined)
                {
                    var hintObject = nn.GetTableRecordHintObject(config.AutomationGUID_FieldValue);
                    listPage = listPage.VerifyInDB_Using_LastId(config.VerificationDescriptionText, hintObject, dbVerifierFunction);
                }
                else
                {
                    //if no automation id field then use primary key: ButTestcases cannot be distributed and run in parallel
                    listPage = listPage.VerifyInDB_Using_LastId(config.VerificationDescriptionText, "EMPFORMEmployeeInformation", "ID", dbVerifierFunction);
                }

            }
            #endregion If Database validation is required

            #region If verification required by editing the record
            if (config.IsSaveWillSucceed && config.IsVerificationRequired_InEditMode)
            {
                Action<GenericFormPageVerifier> formPageVerifier = (v) =>
                {
                    #region AutoGenerated Assert In formVerifier

                    v.AssertTextbox("Employee Name:", "Emp1");
                    v.AssertTextbox("Employee Age:", "22");
                    v.AssertTextbox("Employee Grade:", "7.5");

                    #endregion AutoGenerated Assert In formVerifier
                };

                Action<string, GenericListPage> formVerificationHandler = (id, listPageRef) =>
                {
                    var form = listPageRef.EditRow_WithId_ByNavigationUrl(id);

                    form.BeginVerification(config.VerificationDescriptionText, formPageVerifier);
                };

                if (!(config.IsAutomationGUID_Field_Defined))
                    listPage = listPage.ExecuteCustom_Using_LastId("EMPFORMEmployeeInformation", "ID", formVerificationHandler);
                else
                {
                    var hintObject = nn.GetTableRecordHintObject(config.AutomationGUID_FieldValue);
                    listPage = listPage.ExecuteCustom_Using_LastId(hintObject, formVerificationHandler);
                }
            }

            #endregion If verification required by editing the record

            #region If verification required by viewing the record
            if (config.IsSaveWillSucceed && config.IsVerificationRequired_InViewMode)
            {
                Action<GenericViewPageVerifier> viewPageVerifier = (v) =>
                {
                    #region AutoGenerated Assert In viewVerifier

                    v.AssertTextbox("Employee Name:", "Emp1");
                    v.AssertTextbox("Employee Age:", "22");
                    v.AssertTextbox("Employee Grade:", "7.5");

                    #endregion AutoGenerated Assert In viewVerifier
                };

                Action<string, GenericListPage> viewVerificationHandler = (id, listPageRef) =>
                {
                    var view = listPageRef.ViewRow_WithId_ByNavigationUrl(id);

                    view.BeginVerification(config.VerificationDescriptionText, viewPageVerifier);
                };

                if (!config.IsAutomationGUID_Field_Defined)
                    listPage = listPage.ExecuteCustom_Using_LastId("EMPFORMEmployeeInformation", "ID", viewVerificationHandler);
                else
                {
                    var hintObject = nn.GetTableRecordHintObject(config.AutomationGUID_FieldValue);
                    listPage = listPage.ExecuteCustom_Using_LastId(hintObject, viewVerificationHandler);
                }
            }

            #endregion If verification required by viewing the record

            #endregion If Save will succeeed

            #region If Save will throw validation error
            //Then we must verify if we are still on the same page and validation error was thrown
            //TODO:asheesh
            #endregion If Save will throw validation error

            listPage.End_Automation();
        }

    }
}
